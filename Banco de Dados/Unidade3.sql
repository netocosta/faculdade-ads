/* SUBQUERY */

/* SALARIO MAIOR QUE ABEL */
SELECT LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY > (
    SELECT SALARY
    FROM EMPLOYEES
    WHERE LAST_NAME = 'Abel'
);

/* MESMO CARGO DO FUNCIONARIO ID 141 */
SELECT LAST_NAME, JOB_ID
FROM EMPLOYEES
Where JOB_ID = (
    SELECT JOB_ID
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = 141
);

/* MESMO CARGO DE DAVID LEE */
SELECT FIRST_NAME, LAST_NAME, JOB_ID
FROM EMPLOYEES
WHERE JOB_ID = (
    SELECT JOB_ID
    FROM EMPLOYEES
    WHERE FIRST_NAME = 'David'
    AND LAST_NAME = 'Lee'
)
ORDER BY FIRST_NAME;

/* MESMO DEPARTAMENTO DE DAVID LEE */
SELECT FIRST_NAME, LAST_NAME, JOB_ID, DEPARTMENT_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = (
    SELECT DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE FIRST_NAME = 'David'
    AND LAST_NAME = 'Lee'
)
ORDER BY FIRST_NAME;

/* GANHAM ACIMA DA MEDIA DE SALARIO */
SELECT FIRST_NAME, LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES
WHERE SALARY > (
    SELECT AVG(SALARY)
    FROM EMPLOYEES
)
ORDER BY FIRST_NAME;

/* TRABALHAM NO DEPARTAMENTO DE MARKETING E ADMINISTRATION */
SELECT FIRST_NAME, LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (
    SELECT DEPARTMENT_ID
    FROM DEPARTMENTS
    WHERE DEPARTMENT_NAME IN ('Marketing','Administration')
)
ORDER BY FIRST_NAME;

/* FUNCIONARIOS QUE RECEBEM ACIMA DO MAIOR SALARIO DO DEPARTAMENTO 'SALES' */
SELECT FIRST_NAME, LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES
WHERE SALARY > (
    SELECT MAX(SALARY)
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID = (
        SELECT DEPARTMENT_ID
        FROM DEPARTMENTS
        WHERE DEPARTMENT_NAME = 'Sales'
    )
)
ORDER BY FIRST_NAME;

/* FUNCAO DE DECISAO - DECODE */
SELECT FIRST_NAME, JOB_ID,
DECODE(JOB_ID,
    'IT_PROG','PROGRAMADOR',
    'FI_ACCOUNT','CONTADOR',
    'INDEFINIDO') CARGO
FROM EMPLOYEES;

/* FUNCAO DECODE REALIZANDO CALCULOS */
SELECT FIRST_NAME, JOB_ID, SALARY,
DECODE(JOB_ID,
    'IT_PROG', SALARY * 1.1,
    'FI_ACCOUNT', SALARY * 1.2,
    'AD_VP', SALARY * 0.95,
    SALARY) CARGO
FROM EMPLOYEES;

/* CONDICIONAL - CASE */
SELECT FIRST_NAME, JOB_ID, SALARY,
CASE
    WHEN SALARY < 5000 THEN 'AUMENTO'
    WHEN SALARY > 10000 THEN 'VERIFICAR'
    ELSE 'NÃO AUMENTAR'
END CLASSIFICACAO
FROM EMPLOYEES;



/* ATIVIDADES */

/**
1. Pesquise na tabela locations (retorne CITY e STATE_PROVINCE), aplicando
uma função de decisão no campo State_Province, seguindo a instrução abaixo

Se STATE_PROVINCE for igual a       Valor Retornado (Criar uma alias para a coluna de retorno Retorno_Decode)
Washington                          A String ‘Bem vindo a Casa Branca’
Texas                               A String ‘Olá Cowboy ’
California                          O campo cidade (CITY)
New Jersey                          O campo Street_Address
*/

SELECT CITY, STATE_PROVINCE,
DECODE(STATE_PROVINCE,
    'Washington', 'Bem vindo a Casa Branca',
    'Texas', 'Olá Cowboy',
    'California', CITY,
    'New Jersey', STREET_ADDRESS) RETORNO_DECODE
FROM LOCATIONS;


/*
2. Pesquise na tabela employees (retorne o last_name e o salary),
usando uma função de decisão no campo Salary, seguindo a instrução abaixo.

Salário                 Novo Salário
>= 4200 e <= 6000       Aumento de 10%
>= 9000 e <= 17000      Aumento de 20%
Outros casos            Retorna o salario atua
*/

SELECT LAST_NAME, SALARY,
CASE
    WHEN SALARY >= 4200 AND SALARY <= 6000 THEN SALARY * 1.1
    WHEN SALARY >= 9000 AND SALARY <= 17000 THEN SALARY * 1.2
    ELSE SALARY
END NOVO_SALARIO
FROM EMPLOYEES
